services:
  whats-convert-api:
    image: setupautomatizado/whats-convert-api:latest
    environment:
      # HTTP port used by the API container
      - PORT=8080
      # Runtime environment flag (production, staging, etc.)
      - APP_ENV=production
      # Go memory limit applied to the process
      - GOMEMLIMIT=1GiB
      # Maximum number of conversion workers
      - MAX_WORKERS=32
      # Number of buffers to keep in the pool
      - BUFFER_POOL_SIZE=100
      # HTTP server read timeout
      - READ_TIMEOUT=5m
      # HTTP server write timeout
      - WRITE_TIMEOUT=5m
      # Maximum request body size in bytes
      - BODY_LIMIT=524288000
      # Size of each buffer in bytes
      - BUFFER_SIZE=10485760
      # Go garbage collector aggressiveness
      - GOGC=100
      # Maximum time allowed for a conversion request
      - REQUEST_TIMEOUT=5m
      # Timeout for external downloads
      - DOWNLOAD_TIMEOUT=30s
      # Maximum number of idle HTTP connections
      - MAX_IDLE_CONNS=100
      # Idle connection timeout for the HTTP client
      - IDLE_CONN_TIMEOUT=90s
      # Default audio bitrate for conversions
      - AUDIO_BITRATE=128k
      # Maximum audio payload size accepted (bytes)
      - MAX_AUDIO_SIZE=104857600
      # Default image quality for JPEG output
      - DEFAULT_IMAGE_QUALITY=95
      # Default maximum width for images
      - DEFAULT_MAX_WIDTH=1920
      # Default maximum height for images
      - DEFAULT_MAX_HEIGHT=1920
      # Maximum image payload size accepted (bytes)
      - MAX_IMAGE_SIZE=209715200
      # Log severity level
      - LOG_LEVEL=info
      # Enable additional performance logs
      - ENABLE_PERFORMANCE_LOGS=true
      # Enable /health endpoint
      - ENABLE_HEALTH_CHECK=true
      # Enable /stats endpoint
      - ENABLE_STATS_ENDPOINT=true
      # Enable CORS global middleware
      - ENABLE_CORS=true
      # Require API key authentication
      - ENABLE_API_AUTH=false
      # API key value when authentication is enabled
      - API_KEY=
      # Enable global rate limiting middleware
      - ENABLE_RATE_LIMITING=false
      # Requests per minute limit when rate limiting is on
      - RATE_LIMIT=1000
      # Multiplier applied to worker queue size
      - QUEUE_SIZE_MULTIPLIER=10
      # Max idle connections per host for HTTP client
      - MAX_IDLE_CONNS_PER_HOST=100
      # Target audio sample rate for conversions
      - AUDIO_SAMPLE_RATE=48000
      # Number of audio channels in the output stream
      - AUDIO_CHANNELS=1
      # FFmpeg compression level for audio
      - AUDIO_COMPRESSION_LEVEL=10
      # Preferred image processing engine (auto/ffmpeg/vips)
      - IMAGE_ENGINE=auto
      # Log output format (json/text)
      - LOG_FORMAT=json
      # Enable application debug mode
      - DEBUG=false
      # Enable hot reload (development only)
      - HOT_RELOAD=false
      # Enable pprof profiling endpoints
      - ENABLE_PROFILING=false
      # Toggle production-specific safeguards
      - PRODUCTION_MODE=true
      # Emit X-Request-ID header
      - ENABLE_REQUEST_ID=true
      # Trusted proxy CIDRs for original IP extraction
      - TRUSTED_PROXIES=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
      # Interval between internal health checks
      - HEALTH_CHECK_INTERVAL=5s
      # Docker container name hint
      - CONTAINER_NAME=whats-media-converter-prod
      # Docker restart policy description
      - RESTART_POLICY=always
      # Enable tmpfs usage for temp files
      - USE_TMPFS=true
      # Size of tmpfs mount when enabled
      - TMPFS_SIZE=4G
      # Enable Swagger UI in production
      - ENABLE_SWAGGER=false
      # Enable or disable S3 upload features
      - S3_ENABLED=false
      # S3-compatible provider identifier
      - S3_PROVIDER=minio
      # S3 API endpoint URL
      - S3_ENDPOINT=https://s3.setupautomatizado.com.br
      # Public endpoint used to generate accessible URLs
      - S3_PUBLIC_ENDPOINT=https://s3.setupautomatizado.com.br
      # Region name for S3 provider
      - S3_REGION=us-east-1
      # Bucket name used for uploads
      - S3_BUCKET=zuckzapgo
      # Access key credential for S3
      - S3_ACCESS_KEY=
      # Secret key credential for S3
      - S3_SECRET_KEY=
      # Use path-style requests instead of virtual-hosted style
      - S3_PATH_STYLE=true
      # Make uploaded files publicly readable by default
      - S3_PUBLIC_READ=true
      # Number of days before uploaded objects expire
      - S3_EXPIRATION_DAYS=0
      # Multipart upload threshold in bytes
      - S3_MULTIPART_THRESHOLD=5242880
      # Multipart upload chunk size in bytes
      - S3_CHUNK_SIZE=10485760
      # Maximum concurrent multipart upload jobs
      - S3_MAX_CONCURRENT_UPLOADS=3
      # Timeout applied to S3 uploads
      - S3_UPLOAD_TIMEOUT=1h
      # Number of retry attempts for failed uploads
      - S3_RETRY_COUNT=3
      # Prefix prepended to generated S3 keys
      - S3_KEY_PREFIX=uploads/
      # Include timestamp components inside generated keys
      - S3_USE_TIMESTAMP_IN_KEY=true
      # Include UUID components inside generated keys
      - S3_USE_UUID_IN_KEY=true
      # Preserve original filename inside generated key
      - S3_PRESERVE_FILENAME=true
      # Allowed MIME types for S3 uploads (image/*, audio/*, video/*, application/pdf)
      - S3_ALLOWED_CONTENT_TYPES=
      # Maximum S3 upload payload size (0 = unlimited)
      - S3_MAX_FILE_SIZE=0
      # Enable AV scanning for uploads
      - S3_SCAN_UPLOADS=false
      # Emit S3 metrics
      - S3_ENABLE_METRICS=true
      # Log S3 upload lifecycle events
      - S3_LOG_UPLOADS=true
    networks:
      - network_public
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.whats-convert-api.rule=Host(`api.convert.com.br`)
        - traefik.http.routers.whats-convert-api.entrypoints=websecure
        - traefik.http.routers.whats-convert-api.priority=1
        - traefik.http.routers.setupautomatizado-registry.tls.certresolver=letsencryptresolver
        - traefik.http.routers.whats-convert-api.service=whats-convert-api
        - traefik.http.services.whats-convert-api.loadbalancer.server.port=8080
        
networks:
  network_public:
    name: network_public
    external: true
